{"id":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","dependencies":[{"name":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/package.json","includedInParent":true,"mtime":1630963554441},{"name":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/web3-provider-engine/node_modules/eth-sig-util/package.json","includedInParent":true,"mtime":1630959934003},{"name":"ethereumjs-util","loc":{"line":1,"column":24},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/web3-provider-engine/node_modules/ethereumjs-util/dist/index.js"},{"name":"ethereumjs-abi","loc":{"line":2,"column":23},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/ethereumjs-abi/index.js"}],"generated":{"js":"const ethUtil = require('ethereumjs-util')\nconst ethAbi = require('ethereumjs-abi')\n\nmodule.exports = {\n\n  concatSig: function (v, r, s) {\n    const rSig = ethUtil.fromSigned(r)\n    const sSig = ethUtil.fromSigned(s)\n    const vSig = ethUtil.bufferToInt(v)\n    const rStr = padWithZeroes(ethUtil.toUnsigned(rSig).toString('hex'), 64)\n    const sStr = padWithZeroes(ethUtil.toUnsigned(sSig).toString('hex'), 64)\n    const vStr = ethUtil.stripHexPrefix(ethUtil.intToHex(vSig))\n    return ethUtil.addHexPrefix(rStr.concat(sStr, vStr)).toString('hex')\n  },\n\n  normalize: function (input) {\n    if (!input) return\n\n    if (typeof input === 'number') {\n      const buffer = ethUtil.toBuffer(input)\n      input = ethUtil.bufferToHex(buffer)\n    }\n\n    if (typeof input !== 'string') {\n      var msg = 'eth-sig-util.normalize() requires hex string or integer input.'\n      msg += ' received ' + (typeof input) + ': ' + input\n      throw new Error(msg)\n    }\n\n    return ethUtil.addHexPrefix(input.toLowerCase())\n  },\n\n  personalSign: function (privateKey, msgParams) {\n    var message = ethUtil.toBuffer(msgParams.data)\n    var msgHash = ethUtil.hashPersonalMessage(message)\n    var sig = ethUtil.ecsign(msgHash, privateKey)\n    var serialized = ethUtil.bufferToHex(this.concatSig(sig.v, sig.r, sig.s))\n    return serialized\n  },\n\n  recoverPersonalSignature: function (msgParams) {\n    const publicKey = getPublicKeyFor(msgParams)\n    const sender = ethUtil.publicToAddress(publicKey)\n    const senderHex = ethUtil.bufferToHex(sender)\n    return senderHex\n  },\n\n  extractPublicKey: function (msgParams) {\n    const publicKey = getPublicKeyFor(msgParams)\n    return '0x' + publicKey.toString('hex')\n  },\n\n  typedSignatureHash: function (typedData) {\n    const hashBuffer = typedSignatureHash(typedData)\n    return ethUtil.bufferToHex(hashBuffer)\n  },\n\n  signTypedData: function (privateKey, msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data)\n    const sig = ethUtil.ecsign(msgHash, privateKey)\n    return ethUtil.bufferToHex(this.concatSig(sig.v, sig.r, sig.s))\n  },\n\n  recoverTypedSignature: function (msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data)\n    const publicKey = recoverPublicKey(msgHash, msgParams.sig)\n    const sender = ethUtil.publicToAddress(publicKey)\n    return ethUtil.bufferToHex(sender)\n  }\n\n}\n\n/**\n * @param typedData - Array of data along with types, as per EIP712.\n * @returns Buffer\n */\nfunction typedSignatureHash(typedData) {\n  const error = new Error('Expect argument to be non-empty array')\n  if (typeof typedData !== 'object' || !typedData.length) throw error\n\n  const data = typedData.map(function (e) {\n    return e.type === 'bytes' ? ethUtil.toBuffer(e.value) : e.value\n  })\n  const types = typedData.map(function (e) { return e.type })\n  const schema = typedData.map(function (e) {\n    if (!e.name) throw error\n    return e.type + ' ' + e.name\n  })\n\n  return ethAbi.soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      ethAbi.soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      ethAbi.soliditySHA3(types, data)\n    ]\n  )\n}\n\nfunction recoverPublicKey(hash, sig) {\n  const signature = ethUtil.toBuffer(sig)\n  const sigParams = ethUtil.fromRpcSig(signature)\n  return ethUtil.ecrecover(hash, sigParams.v, sigParams.r, sigParams.s)\n}\n\nfunction getPublicKeyFor (msgParams) {\n  const message = ethUtil.toBuffer(msgParams.data)\n  const msgHash = ethUtil.hashPersonalMessage(message)\n  return recoverPublicKey(msgHash, msgParams.sig)\n}\n\n\nfunction padWithZeroes (number, length) {\n  var myString = '' + number\n  while (myString.length < length) {\n    myString = '0' + myString\n  }\n  return myString\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}}],"sources":{"../node_modules/web3-provider-engine/node_modules/eth-sig-util/index.js":"const ethUtil = require('ethereumjs-util')\nconst ethAbi = require('ethereumjs-abi')\n\nmodule.exports = {\n\n  concatSig: function (v, r, s) {\n    const rSig = ethUtil.fromSigned(r)\n    const sSig = ethUtil.fromSigned(s)\n    const vSig = ethUtil.bufferToInt(v)\n    const rStr = padWithZeroes(ethUtil.toUnsigned(rSig).toString('hex'), 64)\n    const sStr = padWithZeroes(ethUtil.toUnsigned(sSig).toString('hex'), 64)\n    const vStr = ethUtil.stripHexPrefix(ethUtil.intToHex(vSig))\n    return ethUtil.addHexPrefix(rStr.concat(sStr, vStr)).toString('hex')\n  },\n\n  normalize: function (input) {\n    if (!input) return\n\n    if (typeof input === 'number') {\n      const buffer = ethUtil.toBuffer(input)\n      input = ethUtil.bufferToHex(buffer)\n    }\n\n    if (typeof input !== 'string') {\n      var msg = 'eth-sig-util.normalize() requires hex string or integer input.'\n      msg += ' received ' + (typeof input) + ': ' + input\n      throw new Error(msg)\n    }\n\n    return ethUtil.addHexPrefix(input.toLowerCase())\n  },\n\n  personalSign: function (privateKey, msgParams) {\n    var message = ethUtil.toBuffer(msgParams.data)\n    var msgHash = ethUtil.hashPersonalMessage(message)\n    var sig = ethUtil.ecsign(msgHash, privateKey)\n    var serialized = ethUtil.bufferToHex(this.concatSig(sig.v, sig.r, sig.s))\n    return serialized\n  },\n\n  recoverPersonalSignature: function (msgParams) {\n    const publicKey = getPublicKeyFor(msgParams)\n    const sender = ethUtil.publicToAddress(publicKey)\n    const senderHex = ethUtil.bufferToHex(sender)\n    return senderHex\n  },\n\n  extractPublicKey: function (msgParams) {\n    const publicKey = getPublicKeyFor(msgParams)\n    return '0x' + publicKey.toString('hex')\n  },\n\n  typedSignatureHash: function (typedData) {\n    const hashBuffer = typedSignatureHash(typedData)\n    return ethUtil.bufferToHex(hashBuffer)\n  },\n\n  signTypedData: function (privateKey, msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data)\n    const sig = ethUtil.ecsign(msgHash, privateKey)\n    return ethUtil.bufferToHex(this.concatSig(sig.v, sig.r, sig.s))\n  },\n\n  recoverTypedSignature: function (msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data)\n    const publicKey = recoverPublicKey(msgHash, msgParams.sig)\n    const sender = ethUtil.publicToAddress(publicKey)\n    return ethUtil.bufferToHex(sender)\n  }\n\n}\n\n/**\n * @param typedData - Array of data along with types, as per EIP712.\n * @returns Buffer\n */\nfunction typedSignatureHash(typedData) {\n  const error = new Error('Expect argument to be non-empty array')\n  if (typeof typedData !== 'object' || !typedData.length) throw error\n\n  const data = typedData.map(function (e) {\n    return e.type === 'bytes' ? ethUtil.toBuffer(e.value) : e.value\n  })\n  const types = typedData.map(function (e) { return e.type })\n  const schema = typedData.map(function (e) {\n    if (!e.name) throw error\n    return e.type + ' ' + e.name\n  })\n\n  return ethAbi.soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      ethAbi.soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      ethAbi.soliditySHA3(types, data)\n    ]\n  )\n}\n\nfunction recoverPublicKey(hash, sig) {\n  const signature = ethUtil.toBuffer(sig)\n  const sigParams = ethUtil.fromRpcSig(signature)\n  return ethUtil.ecrecover(hash, sigParams.v, sigParams.r, sigParams.s)\n}\n\nfunction getPublicKeyFor (msgParams) {\n  const message = ethUtil.toBuffer(msgParams.data)\n  const msgHash = ethUtil.hashPersonalMessage(message)\n  return recoverPublicKey(msgHash, msgParams.sig)\n}\n\n\nfunction padWithZeroes (number, length) {\n  var myString = '' + number\n  while (myString.length < length) {\n    myString = '0' + myString\n  }\n  return myString\n}\n"},"lineCount":119}},"error":null,"hash":"9c5dfd255786bc3bb17f02bfe2f353af","cacheData":{"env":{}}}