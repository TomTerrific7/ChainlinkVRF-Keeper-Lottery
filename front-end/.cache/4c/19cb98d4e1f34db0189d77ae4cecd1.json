{"id":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","dependencies":[{"name":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/package.json","includedInParent":true,"mtime":1630963554441},{"name":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/package.json","includedInParent":true,"mtime":1630959934098},{"name":"@metamask/safe-event-emitter","loc":{"line":1,"column":33},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/subscriptionManager.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/@metamask/safe-event-emitter/index.js"},{"name":"eth-json-rpc-middleware/scaffold","loc":{"line":2,"column":41},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/subscriptionManager.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-middleware/scaffold.js"},{"name":"json-rpc-engine","loc":{"line":3,"column":42},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/subscriptionManager.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/json-rpc-engine/dist/index.js"},{"name":"./index.js","loc":{"line":4,"column":39},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/subscriptionManager.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/index.js"},{"name":"./hexUtils.js","loc":{"line":5,"column":55},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/subscriptionManager.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/hexUtils.js"},{"name":"./getBlocksForRange.js","loc":{"line":6,"column":34},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/subscriptionManager.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/eth-json-rpc-filters/getBlocksForRange.js"}],"generated":{"js":"const SafeEventEmitter = require('@metamask/safe-event-emitter').default\nconst createScaffoldMiddleware = require('eth-json-rpc-middleware/scaffold')\nconst { createAsyncMiddleware } = require('json-rpc-engine')\nconst createFilterMiddleware = require('./index.js')\nconst { unsafeRandomBytes, incrementHexInt } = require('./hexUtils.js')\nconst getBlocksForRange = require('./getBlocksForRange.js')\n\nmodule.exports = createSubscriptionMiddleware\n\n\nfunction createSubscriptionMiddleware({ blockTracker, provider }) {\n  // state and utilities for handling subscriptions\n  const subscriptions = {}\n  const filterManager = createFilterMiddleware({ blockTracker, provider })\n\n  // internal flag\n  let isDestroyed = false\n\n  // create subscriptionManager api object\n  const events = new SafeEventEmitter()\n  const middleware = createScaffoldMiddleware({\n    eth_subscribe: createAsyncMiddleware(subscribe),\n    eth_unsubscribe: createAsyncMiddleware(unsubscribe),\n  })\n  middleware.destroy = destroy\n  return { events, middleware }\n\n  async function subscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const subscriptionType = req.params[0]\n    // subId is 16 byte hex string\n    const subId = unsafeRandomBytes(16)\n\n    // create sub\n    let sub\n    switch (subscriptionType) {\n      case 'newHeads':\n        sub = createSubNewHeads({ subId })\n        break\n      case 'logs':\n        const filterParams = req.params[1]\n        const filter = await filterManager.newLogFilter(filterParams)\n        sub = createSubFromFilter({ subId, filter })\n        break\n      default:\n        throw new Error(`SubscriptionManager - unsupported subscription type \"${subscriptionType}\"`)\n\n    }\n    subscriptions[subId] = sub\n\n    res.result = subId\n    return\n\n    function createSubNewHeads({ subId }) {\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          blockTracker.removeListener('sync', sub.update)\n        },\n        update: async ({ oldBlock, newBlock }) => {\n          // for newHeads\n          const toBlock = newBlock\n          const fromBlock = incrementHexInt(oldBlock)\n          const rawBlocks = await getBlocksForRange({ provider, fromBlock, toBlock })\n          const results = rawBlocks.map(normalizeBlock)\n          results.forEach((value) => {\n            _emitSubscriptionResult(subId, value)\n          })\n        }\n      }\n      // check for subscription updates on new block\n      blockTracker.on('sync', sub.update)\n      return sub\n    }\n\n    function createSubFromFilter({ subId, filter }){\n      filter.on('update', result => _emitSubscriptionResult(subId, result))\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          return await filterManager.uninstallFilter(filter.idHex)\n        },\n      }\n      return sub\n    }\n  }\n\n  async function unsubscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const id = req.params[0]\n    const subscription = subscriptions[id]\n    // if missing, return \"false\" to indicate it was not removed\n    if (!subscription) {\n      res.result = false\n      return\n    }\n    // cleanup subscription\n    delete subscriptions[id]\n    await subscription.destroy()\n    res.result = true\n  }\n\n  function _emitSubscriptionResult(filterIdHex, value) {\n    events.emit('notification', {\n      jsonrpc: '2.0',\n      method: 'eth_subscription',\n      params: {\n        subscription: filterIdHex,\n        result: value,\n      },\n    })\n  }\n\n  function destroy () {\n    events.removeAllListeners()\n    for (const id in subscriptions) {\n      subscriptions[id].destroy()\n      delete subscriptions[id]\n    }\n    isDestroyed = true\n  }\n}\n\nfunction normalizeBlock(block) {\n  return {\n    hash: block.hash,\n    parentHash: block.parentHash,\n    sha3Uncles: block.sha3Uncles,\n    miner: block.miner,\n    stateRoot: block.stateRoot,\n    transactionsRoot: block.transactionsRoot,\n    receiptsRoot: block.receiptsRoot,\n    logsBloom: block.logsBloom,\n    difficulty: block.difficulty,\n    number: block.number,\n    gasLimit: block.gasLimit,\n    gasUsed: block.gasUsed,\n    nonce: block.nonce,\n    mixHash: block.mixHash,\n    timestamp: block.timestamp,\n    extraData: block.extraData,\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/eth-json-rpc-filters/subscriptionManager.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}}],"sources":{"../node_modules/eth-json-rpc-filters/subscriptionManager.js":"const SafeEventEmitter = require('@metamask/safe-event-emitter').default\nconst createScaffoldMiddleware = require('eth-json-rpc-middleware/scaffold')\nconst { createAsyncMiddleware } = require('json-rpc-engine')\nconst createFilterMiddleware = require('./index.js')\nconst { unsafeRandomBytes, incrementHexInt } = require('./hexUtils.js')\nconst getBlocksForRange = require('./getBlocksForRange.js')\n\nmodule.exports = createSubscriptionMiddleware\n\n\nfunction createSubscriptionMiddleware({ blockTracker, provider }) {\n  // state and utilities for handling subscriptions\n  const subscriptions = {}\n  const filterManager = createFilterMiddleware({ blockTracker, provider })\n\n  // internal flag\n  let isDestroyed = false\n\n  // create subscriptionManager api object\n  const events = new SafeEventEmitter()\n  const middleware = createScaffoldMiddleware({\n    eth_subscribe: createAsyncMiddleware(subscribe),\n    eth_unsubscribe: createAsyncMiddleware(unsubscribe),\n  })\n  middleware.destroy = destroy\n  return { events, middleware }\n\n  async function subscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const subscriptionType = req.params[0]\n    // subId is 16 byte hex string\n    const subId = unsafeRandomBytes(16)\n\n    // create sub\n    let sub\n    switch (subscriptionType) {\n      case 'newHeads':\n        sub = createSubNewHeads({ subId })\n        break\n      case 'logs':\n        const filterParams = req.params[1]\n        const filter = await filterManager.newLogFilter(filterParams)\n        sub = createSubFromFilter({ subId, filter })\n        break\n      default:\n        throw new Error(`SubscriptionManager - unsupported subscription type \"${subscriptionType}\"`)\n\n    }\n    subscriptions[subId] = sub\n\n    res.result = subId\n    return\n\n    function createSubNewHeads({ subId }) {\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          blockTracker.removeListener('sync', sub.update)\n        },\n        update: async ({ oldBlock, newBlock }) => {\n          // for newHeads\n          const toBlock = newBlock\n          const fromBlock = incrementHexInt(oldBlock)\n          const rawBlocks = await getBlocksForRange({ provider, fromBlock, toBlock })\n          const results = rawBlocks.map(normalizeBlock)\n          results.forEach((value) => {\n            _emitSubscriptionResult(subId, value)\n          })\n        }\n      }\n      // check for subscription updates on new block\n      blockTracker.on('sync', sub.update)\n      return sub\n    }\n\n    function createSubFromFilter({ subId, filter }){\n      filter.on('update', result => _emitSubscriptionResult(subId, result))\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          return await filterManager.uninstallFilter(filter.idHex)\n        },\n      }\n      return sub\n    }\n  }\n\n  async function unsubscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const id = req.params[0]\n    const subscription = subscriptions[id]\n    // if missing, return \"false\" to indicate it was not removed\n    if (!subscription) {\n      res.result = false\n      return\n    }\n    // cleanup subscription\n    delete subscriptions[id]\n    await subscription.destroy()\n    res.result = true\n  }\n\n  function _emitSubscriptionResult(filterIdHex, value) {\n    events.emit('notification', {\n      jsonrpc: '2.0',\n      method: 'eth_subscription',\n      params: {\n        subscription: filterIdHex,\n        result: value,\n      },\n    })\n  }\n\n  function destroy () {\n    events.removeAllListeners()\n    for (const id in subscriptions) {\n      subscriptions[id].destroy()\n      delete subscriptions[id]\n    }\n    isDestroyed = true\n  }\n}\n\nfunction normalizeBlock(block) {\n  return {\n    hash: block.hash,\n    parentHash: block.parentHash,\n    sha3Uncles: block.sha3Uncles,\n    miner: block.miner,\n    stateRoot: block.stateRoot,\n    transactionsRoot: block.transactionsRoot,\n    receiptsRoot: block.receiptsRoot,\n    logsBloom: block.logsBloom,\n    difficulty: block.difficulty,\n    number: block.number,\n    gasLimit: block.gasLimit,\n    gasUsed: block.gasUsed,\n    nonce: block.nonce,\n    mixHash: block.mixHash,\n    timestamp: block.timestamp,\n    extraData: block.extraData,\n  }\n}\n"},"lineCount":152}},"error":null,"hash":"5e6e31e545d620061e46f9a51f0752fd","cacheData":{"env":{}}}