{"id":"../node_modules/json-rpc-engine/node_modules/eth-rpc-errors/dist/utils.js","dependencies":[{"name":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/package.json","includedInParent":true,"mtime":1630963554441},{"name":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/json-rpc-engine/node_modules/eth-rpc-errors/package.json","includedInParent":true,"mtime":1630959934094},{"name":"./error-constants","loc":{"line":4,"column":34},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/json-rpc-engine/node_modules/eth-rpc-errors/dist/utils.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/json-rpc-engine/node_modules/eth-rpc-errors/dist/error-constants.js"},{"name":"./classes","loc":{"line":5,"column":26},"parent":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/json-rpc-engine/node_modules/eth-rpc-errors/dist/utils.js","resolved":"/Users/tomterrific/Chainshot/ChainlinkVRF-Lottery/node_modules/json-rpc-engine/node_modules/eth-rpc-errors/dist/classes.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeError = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0;\nconst error_constants_1 = require(\"./error-constants\");\nconst classes_1 = require(\"./classes\");\nconst FALLBACK_ERROR_CODE = error_constants_1.errorCodes.rpc.internal;\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.';\nconst FALLBACK_ERROR = {\n    code: FALLBACK_ERROR_CODE,\n    message: getMessageFromCode(FALLBACK_ERROR_CODE),\n};\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n    if (Number.isInteger(code)) {\n        const codeString = code.toString();\n        if (hasKey(error_constants_1.errorValues, codeString)) {\n            return error_constants_1.errorValues[codeString].message;\n        }\n        if (isJsonRpcServerError(code)) {\n            return exports.JSON_RPC_SERVER_ERROR_MESSAGE;\n        }\n    }\n    return fallbackMessage;\n}\nexports.getMessageFromCode = getMessageFromCode;\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n */\nfunction isValidCode(code) {\n    if (!Number.isInteger(code)) {\n        return false;\n    }\n    const codeString = code.toString();\n    if (error_constants_1.errorValues[codeString]) {\n        return true;\n    }\n    if (isJsonRpcServerError(code)) {\n        return true;\n    }\n    return false;\n}\nexports.isValidCode = isValidCode;\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n */\nfunction serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = false, } = {}) {\n    var _a, _b;\n    if (!fallbackError ||\n        !Number.isInteger(fallbackError.code) ||\n        typeof fallbackError.message !== 'string') {\n        throw new Error('Must provide fallback error with integer number code and string message.');\n    }\n    if (error instanceof classes_1.EthereumRpcError) {\n        return error.serialize();\n    }\n    const serialized = {};\n    if (error &&\n        typeof error === 'object' &&\n        !Array.isArray(error) &&\n        hasKey(error, 'code') &&\n        isValidCode(error.code)) {\n        const _error = error;\n        serialized.code = _error.code;\n        if (_error.message && typeof _error.message === 'string') {\n            serialized.message = _error.message;\n            if (hasKey(_error, 'data')) {\n                serialized.data = _error.data;\n            }\n        }\n        else {\n            serialized.message = getMessageFromCode(serialized.code);\n            serialized.data = { originalError: assignOriginalError(error) };\n        }\n    }\n    else {\n        serialized.code = fallbackError.code;\n        const message = (_a = error) === null || _a === void 0 ? void 0 : _a.message;\n        serialized.message = (message && typeof message === 'string'\n            ? message\n            : fallbackError.message);\n        serialized.data = { originalError: assignOriginalError(error) };\n    }\n    const stack = (_b = error) === null || _b === void 0 ? void 0 : _b.stack;\n    if (shouldIncludeStack && error && stack && typeof stack === 'string') {\n        serialized.stack = stack;\n    }\n    return serialized;\n}\nexports.serializeError = serializeError;\n// Internal\nfunction isJsonRpcServerError(code) {\n    return code >= -32099 && code <= -32000;\n}\nfunction assignOriginalError(error) {\n    if (error && typeof error === 'object' && !Array.isArray(error)) {\n        return Object.assign({}, error);\n    }\n    return error;\n}\nfunction hasKey(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n"},"sourceMaps":{"js":{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"4baa28134e32aadcaa6d557884f5cb5f","cacheData":{"env":{}}}