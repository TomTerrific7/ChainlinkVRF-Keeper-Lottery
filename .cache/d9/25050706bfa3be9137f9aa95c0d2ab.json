{"id":"node_modules/ethereum-cryptography/secp256k1.js","dependencies":[{"name":"/Users/tomterrific/Projects/Chainlink-Lottery/node_modules/ethereum-cryptography/secp256k1.js.map","includedInParent":true,"mtime":1630224191784},{"name":"/Users/tomterrific/Projects/Chainlink-Lottery/node_modules/ethereum-cryptography/src/secp256k1.ts","includedInParent":true,"mtime":1630224191978},{"name":"/Users/tomterrific/Projects/Chainlink-Lottery/package.json","includedInParent":true,"mtime":1630226493026},{"name":"/Users/tomterrific/Projects/Chainlink-Lottery/node_modules/ethereum-cryptography/package.json","includedInParent":true,"mtime":1630224190507},{"name":"secp256k1","loc":{"line":74,"column":17},"parent":"/Users/tomterrific/Projects/Chainlink-Lottery/node_modules/ethereum-cryptography/secp256k1.js","resolved":"/Users/tomterrific/Projects/Chainlink-Lottery/node_modules/secp256k1/elliptic.js"},{"name":"./random","loc":{"line":43,"column":23},"parent":"/Users/tomterrific/Projects/Chainlink-Lottery/node_modules/ethereum-cryptography/secp256k1.js","resolved":"/Users/tomterrific/Projects/Chainlink-Lottery/node_modules/ethereum-cryptography/random.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1_1 = require(\"secp256k1\");\nvar random_1 = require(\"./random\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(require(\"secp256k1\"));\n"},"sourceMaps":{"js":{"version":3,"file":"secp256k1.js","sourceRoot":"","sources":["src/secp256k1.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAA6C;AAC7C,mCAA8D;AAE9D,IAAM,0BAA0B,GAAG,EAAE,CAAC;AAEtC,SAAsB,gBAAgB;;;;;;yBAC7B,IAAI;oBACE,qBAAM,uBAAc,CAAC,0BAA0B,CAAC,EAAA;;oBAArD,EAAE,GAAG,SAAgD;oBAC3D,IAAI,4BAAgB,CAAC,EAAE,CAAC,EAAE;wBACxB,sBAAO,EAAE,EAAC;qBACX;;;;;;CAEJ;AAPD,4CAOC;AAED,SAAgB,oBAAoB;IAClC,OAAO,IAAI,EAAE;QACX,IAAM,EAAE,GAAG,2BAAkB,CAAC,0BAA0B,CAAC,CAAC;QAC1D,IAAI,4BAAgB,CAAC,EAAE,CAAC,EAAE;YACxB,OAAO,EAAE,CAAC;SACX;KACF;AACH,CAAC;AAPD,oDAOC;AAED,+BAA0B","sourcesContent":["import { privateKeyVerify } from \"secp256k1\";\nimport { getRandomBytes, getRandomBytesSync } from \"./random\";\n\nconst SECP256K1_PRIVATE_KEY_SIZE = 32;\n\nexport async function createPrivateKey(): Promise<Uint8Array> {\n  while (true) {\n    const pk = await getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport function createPrivateKeySync(): Uint8Array {\n  while (true) {\n    const pk = getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport * from \"secp256k1\";\n"]}},"error":null,"hash":"c5eed88f8121172d35f5d0db910077c3","cacheData":{"env":{}}}